name: ci
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, nightly, macos, win-msvc]
        include:
          - build: stable
            os: ubuntu-18.04
            rust: stable
          - build: nightly
            os: ubuntu-18.04
            rust: nightly
          - build: macos
            os: macOS-latest
            rust: stable
          - build: win-msvc
            os: windows-2019
            rust: stable
    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - name: run custom provider example
        run: cargo run --package sorrow-i18n --example custom_provider
      - name: run eu_ru_localization example
        run: cargo run --package sorrow-i18n --example eu_ru_localization
      - name: run eu_ru_localization example
        run: cargo run --package sorrow-i18n --example eu_ru_localization_with_state
      - name: run eu_ru_localization_incl_dir example with incl_dir features
        run: cargo run --package sorrow-i18n --example eu_ru_localization_incl_dir --features incl_dir
      - name: run file_change example
        run: cargo run --package sorrow-i18n --example file_change
      - name: run macro
        run: cargo run --package sorrow-i18n --example macro --features macro
      - name: run macro with incl dir
        run: cargo run --package sorrow-i18n --example macro_with_incl_dir --features macro,incl_dir
      - name: run macro with custom provider
        run: cargo run --package sorrow-i18n --example macro_with_custom_provider --features macro